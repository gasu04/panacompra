diff --git a/Worker.py b/Worker.py
index da97ac1..c5e7421 100644
--- a/Worker.py
+++ b/Worker.py
@@ -17,7 +17,7 @@ class WorkThread(threading.Thread):
     self.compra_urls = queue
     self.compras = out_queue
     self.scrapers = scrapers
-    self.precio_regex = re.compile("(?:Precio.*?>.*?>[^0-9]*)([0-9]*\.[0-9][0-9]*)") 
+    self.precio_regex = re.compile("(?:Precio.*?>.*?>[^0-9]*)([0-9,]*\.[0-9][0-9]*)") 
     self.acto_regex = re.compile("(?:ero de Acto:</td><td class=\"formEjemplos\">)([^<]*)")
     self.entidad_regex = re.compile("(?:Entidad:</td><td class=\"formEjemplos\">)([^<]*)") 
     self.proponente_regex = re.compile("(?:Proponente.*\n.*\n.*?Ejemplos\">)([^<]*)",re.MULTILINE)
@@ -25,12 +25,13 @@ class WorkThread(threading.Thread):
   def run(self):
     while True:
       try:
-        url = self.compra_urls.get_nowait()
+        url = self.compra_urls.get()
         self.compra_urls.task_done()
         self.eat_compra(url)
       except Empty:
+        print "url queue empty"
         if any([scraper.is_alive() for scraper in self.scrapers]):
-          sleep(1)
+          sleep(5)
           continue
         else:
           print 'worker dying'
@@ -43,25 +44,25 @@ class WorkThread(threading.Thread):
 
   def parse_compra_html(self,html):
     try:
-      acto = self.acto_regex.findall(html)[0].encode('ascii', 'ignore')
-    except:
+      acto = self.acto_regex.findall(html)[0].decode('utf-8', 'ignore')
+    except (IndexError,UnicodeDecodeError):
       acto = "empty"
     try:
-      entidad = self.entidad_regex.findall(html)[0].encode('ascii', 'ignore')
-    except:
-      entidad = "empty"
+      entidad = self.entidad_regex.findall(html)[0].decode('utf-8', 'ignore')
+    except (IndexError,UnicodeDecodeError):
+      entidad = self.entidad_regex.findall(html)[0].split()[0].decode('utf-8', 'ignore')
     try:
-      precio = self.precio_regex.findall(html)[0].encode('ascii', 'ignore')
-    except:
+      precio = self.precio_regex.findall(html)[0].decode('utf-8', 'ignore')
+    except (IndexError,UnicodeDecodeError):
       precio = "empty"
     try:
-      proponente = self.proponente_regex.findall(html)[0].encode('ascii', 'ignore')
-    except:
+      proponente = self.proponente_regex.findall(html)[0].decode('utf-8', 'ignore')
+    except (IndexError,UnicodeDecodeError):
       proponente = "empty"
     return { 'entidad' : entidad, 'acto': acto, 'precio' : precio, 'proponente' : proponente}
 
   def get_compra_html(self,url):
-    connection = httplib.HTTPConnection("www.panamacompra.gob.pa", "80")
+    connection = httplib.HTTPConnection("201.227.172.42", "80")
     connection.request("GET", url)
     response = connection.getresponse()
     data = response.read()
